<launch>
  <arg name="world_name" default="basic"/>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="mav_name" default="hummingbird" />
  <arg name="paused" value="false"/>
  
  
   <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world"/>
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="$(arg paused)"/>
    <!-- <arg name="gui" value="false"/> -->
  </include>
  <rosparam command = "load" file = "$(find trajectory_generator)/param/traj_param.yaml" />
<node name="control_law_node" pkg="control_law" type="control_law_node" />
<!--<node  name="trajectory_generator" pkg="trajectory_generator" type="trajectory_generator_node" output="screen">
</node>-->
 <!-- drone 1 --> 
<group ns="$(arg mav_name)1">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)1" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
	  <arg name="log_file" value="$(arg mav_name)1"/>
      
      <arg name="x" value="-2.0"/>
      <arg name="y" value="-2.0"/>
    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_hummingbird.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    
    <node name="fleet_control" pkg="control_law" type="fleet_control" output="screen">
     <param name ="xdist" type = "double" value = "0.0"/>
    <param name = "ydist" type = "double" value = "0.0"/>
    <param name ="currentx" type = "double" value = "-2.0"/>
    <param name = "currenty" type = "double" value = "-2.0"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    
</group>
  
 <!-- drone 2 -->  
<group ns="$(arg mav_name)2">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)2" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
	  <arg name="log_file" value="$(arg mav_name)2"/>
      <arg name="x" value="0.5"/>
      <arg name="y" value="-3.0"/>

    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_hummingbird.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    
    <node name="fleet_control" pkg="control_law" type="fleet_control" output="screen">
     <param name ="xdist" type = "double" value = "1.5"/>
    <param name = "ydist" type = "double" value = "0.0"/>
        <param name ="currentx" type = "double" value = "0.5"/>
    <param name = "currenty" type = "double" value = "-3.0"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    
</group>
 <!-- drone 3 -->

<group ns="$(arg mav_name)3">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)3" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
	  <arg name="log_file" value="$(arg mav_name)3"/>
      <arg name="x" value="3.5"/>
      <arg name="y" value="1.6"/>

    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_hummingbird.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
   
    <node name="fleet_control" pkg="control_law" type="fleet_control" output="screen">
     <param name ="xdist" type = "double" value = "1.5"/>
    <param name = "ydist" type = "double" value = "1.5"/>
    <param name ="currentx" type = "double" value = "3.0"/>
    <param name = "currenty" type = "double" value = "1.6"/>
    </node>
  
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    
</group>

 <!-- drone 4 -->

<group ns="$(arg mav_name)4">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)4" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
	  <arg name="log_file" value="$(arg mav_name)4"/>
      <arg name="x" value="0.0"/>
      <arg name="y" value="1.5"/>

    </include>
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_hummingbird.yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    
    <node name="fleet_control" pkg="control_law" type="fleet_control" output="screen">
     <param name ="xdist" type = "double" value = "0.0"/>
    <param name = "ydist" type = "double" value = "1.5"/>
    <param name ="currentx" type = "double" value = "0.0"/>
    <param name = "currenty" type = "double" value = "1.5"/>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    
</group>
  <node name = "plotting" pkg = "control_law" type = "plotting"/> 
</launch>
