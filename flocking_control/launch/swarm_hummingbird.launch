<launch>
  <arg name="world_name" default="basic"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="hummingbird" />

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world" />
    <arg name="paused" value="true"/>
  </include>


  <!-- PARAMETER SET -->
  <!-- Load controller parameter -->
  <rosparam command = "load" file    = "$(find swarm_controller)/param/control_param.yaml" />
  <!-- Load trajectory parameter -->
  <rosparam command = "load" file    = "$(find trajectory_generator)/param/traj_param.yaml" />

  <!-- Launch swarm_information_pub node which will publish a list of all odometry informations of the members of the swarm -->
  <!-- !!! Don't forget to adjust the swarmSize parameter !!! -->
  <node  name="swarm_information_pub" pkg="swarm_information_pub" type="swarm_information_pub_node" output="screen">
  	<param name="swarmSize" value="6" />
  </node>

  <!-- Launch the trajectory_generator -->
  <node  name="trajectory_generator" pkg="trajectory_generator" type="trajectory_generator_node" output="screen">
  </node>
	
  <!-- Drone number 1 -->
  <group ns="hummingbird1">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="hummingbird" />
      <arg name="namespace" value="hummingbird1" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="hummingbird1"/>
      <arg name="x" value="1"/>
      <arg name="y" value="-1"/>
    </include>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  
  <!-- Launch the controller for drone 1 -->
  <!-- !!! Don't forget to adjust the ID of the drone (droneNum) !!! -->
    <node  name="swarm_controller" pkg="swarm_controller" type="swarm_controller_node" output="screen">
  	<param name="droneNum" value="1" />
  	<param name="swarmSize" value="6" /> <!-- first drone needs swarmSize for logging data of all drones -->
    </node>

  <!-- Launch the roll_pitch_yawrate_thrust_controller for drone 1 -->
    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_hummingbird.yaml" />
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
  	<remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
  </group>

  <!-- Drone number 2 -->
  <group ns="hummingbird2">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="hummingbird" />
      <arg name="namespace" value="hummingbird2" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="hummingbird2"/>
      <arg name="x" value="-2"/>
      <arg name="y" value="-1"/>
    </include>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  
  <!-- Launch the controller for drone 2 -->
  <!-- !!! Don't forget to adjust the ID of the drone (droneNum) !!! -->
    <node  name="swarm_controller" pkg="swarm_controller" type="swarm_controller_node" output="screen">
  	<param name="droneNum" value="2" />
  	<param name="swarmSize" value="6" /> <!-- first drone needs swarmSize for logging data of all drones -->
    </node>

  <!-- Launch the roll_pitch_yawrate_thrust_controller for drone 2 -->
    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_hummingbird.yaml" />
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
  	<remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
  </group>


  <!-- Drone number 3 -->
  <group ns="hummingbird3">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="hummingbird" />
      <arg name="namespace" value="hummingbird3" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="hummingbird3"/>
      <arg name="x" value="-3"/>
      <arg name="y" value="-2"/>
    </include>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  
  <!-- Launch the controller for drone 3 -->
  <!-- !!! Don't forget to adjust the ID of the drone (droneNum) !!! -->
    <node  name="swarm_controller" pkg="swarm_controller" type="swarm_controller_node" output="screen">
  	<param name="droneNum" value="3" />
  	<param name="swarmSize" value="6" /> <!-- first drone needs swarmSize for logging data of all drones -->
    </node>

  <!-- Launch the roll_pitch_yawrate_thrust_controller for drone 3 -->
    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_hummingbird.yaml" />
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
  	<remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
  </group>


  <!-- Drone number 4 -->
  <group ns="hummingbird4">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="hummingbird" />
      <arg name="namespace" value="hummingbird4" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="hummingbird4"/>
      <arg name="x" value="0"/>
      <arg name="y" value="-3"/>
    </include>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  
  <!-- Launch the controller for drone 4 -->
  <!-- !!! Don't forget to adjust the ID of the drone (droneNum) !!! -->
    <node  name="swarm_controller" pkg="swarm_controller" type="swarm_controller_node" output="screen">
  	<param name="droneNum" value="4" />
  	<param name="swarmSize" value="6" /> <!-- first drone needs swarmSize for logging data of all drones -->
    </node>

  <!-- Launch the roll_pitch_yawrate_thrust_controller for drone 4 -->
    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_hummingbird.yaml" />
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
  	<remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
  </group>

  <!-- Drone number 5 -->
  <group ns="hummingbird5">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="hummingbird" />
      <arg name="namespace" value="hummingbird5" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="hummingbird5"/>
      <arg name="x" value="-1"/>
      <arg name="y" value="2"/>
    </include>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  
  <!-- Launch the controller for drone 5 -->
  <!-- !!! Don't forget to adjust the ID of the drone (droneNum) !!! -->
    <node  name="swarm_controller" pkg="swarm_controller" type="swarm_controller_node" output="screen">
  	<param name="droneNum" value="5" />
  	<param name="swarmSize" value="6" /> <!-- first drone needs swarmSize for logging data of all drones -->
    </node>

  <!-- Launch the roll_pitch_yawrate_thrust_controller for drone 5 -->
    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_hummingbird.yaml" />
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
  	<remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
  </group>

  <!-- Drone number 6 -->
  <group ns="hummingbird6">
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="hummingbird" />
      <arg name="namespace" value="hummingbird6" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="hummingbird6"/>
      <arg name="x" value="2"/>
      <arg name="y" value="2"/>
    </include>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  
  <!-- Launch the controller for drone 6 -->
  <!-- !!! Don't forget to adjust the ID of the drone (droneNum) !!! -->
    <node  name="swarm_controller" pkg="swarm_controller" type="swarm_controller_node" output="screen">
  	<param name="droneNum" value="6" />
  	<param name="swarmSize" value="6" /> <!-- first drone needs swarmSize for logging data of all drones -->
    </node>

  <!-- Launch the roll_pitch_yawrate_thrust_controller for drone 6 -->
    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_hummingbird.yaml" />
  	<rosparam command="load" file="$(find rotors_gazebo)/resource/hummingbird.yaml" />
  	<remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
  </group>

</launch>
